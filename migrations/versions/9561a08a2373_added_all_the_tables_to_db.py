"""added all the tables to db

Revision ID: 9561a08a2373
Revises: 
Create Date: 2024-07-17 04:52:25.907874

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '9561a08a2373'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('images',
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email_id', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('verification_code', sa.String(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_id')
    )
    op.create_table('amenities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_by_user', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_amenities_id'), 'amenities', ['id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('table_name', sa.String(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('changed_by', sa.Integer(), nullable=False),
    sa.Column('old_values', sa.String(), nullable=False),
    sa.Column('new_values', sa.String(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_table('property_address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('house_no', sa.String(), nullable=True),
    sa.Column('building_name', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('zip_code', sa.String(length=6), nullable=False),
    sa.Column('created_by_user', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_property_address_id'), 'property_address', ['id'], unique=False)
    op.create_table('property_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_by_user', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_property_config_id'), 'property_config', ['id'], unique=False)
    op.create_table('property_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_by_user', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('queries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_phonenumber', sa.String(length=10), nullable=False),
    sa.Column('user_name', sa.String(), nullable=False),
    sa.Column('query_type', sa.String(), nullable=False),
    sa.Column('property_type_id', sa.Integer(), nullable=False),
    sa.Column('property_config_id', sa.Integer(), nullable=False),
    sa.Column('property_address_id', sa.Integer(), nullable=True),
    sa.Column('amenities_id', sa.Integer(), nullable=True),
    sa.Column('contacted', sa.Boolean(), nullable=True),
    sa.Column('resolution', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['amenities_id'], ['amenities.id'], ),
    sa.ForeignKeyConstraint(['property_address_id'], ['property_address.id'], ),
    sa.ForeignKeyConstraint(['property_config_id'], ['property_config.id'], ),
    sa.ForeignKeyConstraint(['property_type_id'], ['property_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_queries_id'), 'queries', ['id'], unique=False)

    op.execute(
        "INSERT INTO roles (name, description, created_at, updated_at) VALUES ('admin', 'Administrative role', now(), now()), ('superAdmin', 'Super Administrative role', now(), now()), ('endUser', 'End User role', now(), now())"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_queries_id'), table_name='queries')
    op.drop_table('queries')
    op.drop_table('property_types')
    op.drop_index(op.f('ix_property_config_id'), table_name='property_config')
    op.drop_table('property_config')
    op.drop_index(op.f('ix_property_address_id'), table_name='property_address')
    op.drop_table('property_address')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_amenities_id'), table_name='amenities')
    op.drop_table('amenities')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('images')
    # ### end Alembic commands ###
